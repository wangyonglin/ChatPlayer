// Layer Declaration header
//
// This file is auto-generated by cmake, don't edit it.

#include "layer/concat.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat) }
#include "layer/x86/concat_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat_x86) }
#include "layer/x86/concat_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat_x86_avx512) }
#include "layer/x86/concat_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat_x86_fma) }
#include "layer/x86/concat_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Concat_x86_avx) }
#include "layer/convolution.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution) }
#include "layer/x86/convolution_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86) }
#include "layer/x86/convolution_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86_avx512) }
#include "layer/x86/convolution_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86_fma) }
#include "layer/x86/convolution_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution_x86_avx) }
#include "layer/crop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop) }
#include "layer/x86/crop_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86) }
#include "layer/x86/crop_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86_avx512) }
#include "layer/x86/crop_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86_fma) }
#include "layer/x86/crop_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Crop_x86_avx) }
#include "layer/dropout.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout) }
#include "layer/x86/dropout_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout_x86) }
#include "layer/x86/dropout_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout_x86_avx512) }
#include "layer/x86/dropout_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout_x86_fma) }
#include "layer/x86/dropout_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dropout_x86_avx) }
#include "layer/embed.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Embed) }
#include "layer/flatten.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten) }
#include "layer/x86/flatten_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86) }
#include "layer/x86/flatten_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86_avx512) }
#include "layer/x86/flatten_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86_fma) }
#include "layer/x86/flatten_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Flatten_x86_avx) }
#include "layer/innerproduct.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct) }
#include "layer/x86/innerproduct_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86) }
#include "layer/x86/innerproduct_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86_avx512) }
#include "layer/x86/innerproduct_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86_fma) }
#include "layer/x86/innerproduct_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(InnerProduct_x86_avx) }
#include "layer/input.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Input) }
#include "layer/memorydata.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MemoryData) }
#include "layer/reduction.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reduction) }
#include "layer/relu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU) }
#include "layer/x86/relu_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86) }
#include "layer/x86/relu_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86_avx512) }
#include "layer/x86/relu_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86_fma) }
#include "layer/x86/relu_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ReLU_x86_avx) }
#include "layer/reshape.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape) }
#include "layer/x86/reshape_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape_x86) }
#include "layer/x86/reshape_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape_x86_avx512) }
#include "layer/x86/reshape_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape_x86_fma) }
#include "layer/x86/reshape_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Reshape_x86_avx) }
#include "layer/sigmoid.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid) }
#include "layer/x86/sigmoid_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86) }
#include "layer/x86/sigmoid_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86_avx512) }
#include "layer/x86/sigmoid_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86_fma) }
#include "layer/x86/sigmoid_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Sigmoid_x86_avx) }
#include "layer/slice.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice) }
#include "layer/x86/slice_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice_x86) }
#include "layer/x86/slice_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice_x86_avx512) }
#include "layer/x86/slice_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice_x86_fma) }
#include "layer/x86/slice_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Slice_x86_avx) }
#include "layer/softmax.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax) }
#include "layer/x86/softmax_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax_x86) }
#include "layer/x86/softmax_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax_x86_avx512) }
#include "layer/x86/softmax_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax_x86_fma) }
#include "layer/x86/softmax_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Softmax_x86_avx) }
#include "layer/split.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Split) }
#include "layer/tanh.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH) }
#include "layer/x86/tanh_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH_x86) }
#include "layer/x86/tanh_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH_x86_avx512) }
#include "layer/x86/tanh_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH_x86_fma) }
#include "layer/x86/tanh_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(TanH_x86_avx) }
#include "layer/rnn.h"
namespace ncnn { DEFINE_LAYER_CREATOR(RNN) }
#include "layer/lstm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM) }
#include "layer/x86/lstm_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM_x86) }
#include "layer/x86/lstm_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM_x86_avx512) }
#include "layer/x86/lstm_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM_x86_fma) }
#include "layer/x86/lstm_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(LSTM_x86_avx) }
#include "layer/binaryop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp) }
#include "layer/x86/binaryop_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86) }
#include "layer/x86/binaryop_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86_avx512) }
#include "layer/x86/binaryop_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86_fma) }
#include "layer/x86/binaryop_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(BinaryOp_x86_avx) }
#include "layer/unaryop.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp) }
#include "layer/x86/unaryop_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp_x86) }
#include "layer/x86/unaryop_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp_x86_avx512) }
#include "layer/x86/unaryop_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp_x86_fma) }
#include "layer/x86/unaryop_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(UnaryOp_x86_avx) }
#include "layer/padding.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding) }
#include "layer/x86/padding_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86) }
#include "layer/x86/padding_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86_avx512) }
#include "layer/x86/padding_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86_fma) }
#include "layer/x86/padding_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Padding_x86_avx) }
#include "layer/expanddims.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ExpandDims) }
#include "layer/permute.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Permute) }
#include "layer/quantize.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize) }
#include "layer/x86/quantize_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize_x86) }
#include "layer/x86/quantize_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize_x86_avx512) }
#include "layer/x86/quantize_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize_x86_fma) }
#include "layer/x86/quantize_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Quantize_x86_avx) }
#include "layer/dequantize.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize) }
#include "layer/x86/dequantize_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize_x86) }
#include "layer/x86/dequantize_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize_x86_avx512) }
#include "layer/x86/dequantize_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize_x86_fma) }
#include "layer/x86/dequantize_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Dequantize_x86_avx) }
#include "layer/packing.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing) }
#include "layer/x86/packing_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86) }
#include "layer/x86/packing_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86_avx512) }
#include "layer/x86/packing_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86_fma) }
#include "layer/x86/packing_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Packing_x86_avx) }
#include "layer/requantize.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize) }
#include "layer/x86/requantize_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize_x86) }
#include "layer/x86/requantize_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize_x86_avx512) }
#include "layer/x86/requantize_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize_x86_fma) }
#include "layer/x86/requantize_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Requantize_x86_avx) }
#include "layer/cast.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast) }
#include "layer/x86/cast_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86) }
#include "layer/x86/cast_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86_avx512) }
#include "layer/x86/cast_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86_fma) }
#include "layer/x86/cast_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Cast_x86_avx) }
#include "layer/gemm.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm) }
#include "layer/x86/gemm_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm_x86) }
#include "layer/x86/gemm_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm_x86_avx512) }
#include "layer/x86/gemm_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm_x86_fma) }
#include "layer/x86/gemm_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Gemm_x86_avx) }
#include "layer/convolution1d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D) }
#include "layer/x86/convolution1d_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D_x86) }
#include "layer/x86/convolution1d_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D_x86_avx512) }
#include "layer/x86/convolution1d_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D_x86_fma) }
#include "layer/x86/convolution1d_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(Convolution1D_x86_avx) }
#include "layer/convolutiondepthwise1d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(ConvolutionDepthWise1D) }
#include "layer/matmul.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul) }
#include "layer/x86/matmul_x86.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul_x86) }
#include "layer/x86/matmul_x86_avx512.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul_x86_avx512) }
#include "layer/x86/matmul_x86_fma.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul_x86_fma) }
#include "layer/x86/matmul_x86_avx.h"
namespace ncnn { DEFINE_LAYER_CREATOR(MatMul_x86_avx) }
#include "layer/deconvolutiondepthwise1d.h"
namespace ncnn { DEFINE_LAYER_CREATOR(DeconvolutionDepthWise1D) }
#include "layer/glu.h"
namespace ncnn { DEFINE_LAYER_CREATOR(GLU) }

